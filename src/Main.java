import java.io.IOException;
import java.util.Scanner;
import jd2xx.JD2XX;

public class Main implements Runnable {
	
	static String command;
	
	static byte dmxvar1 = (byte) (0x00);
	static byte dmxvar2 = (byte) (0x00);
	static byte dmxvar3 = (byte) (0x00);
	static byte dmxvar4 = (byte) (0x00);
	static byte dmxvar5 = (byte) (0x00);
	static byte dmxvar6 = (byte) (0x00);
	static byte dmxvar7 = (byte) (0x00);
	static byte dmxvar8 = (byte) (0x00);
	static byte dmxvar9 = (byte) (0x00);
	static byte dmxvar10 = (byte) (0x00);
	static byte dmxvar11 = (byte) (0x00);
	static byte dmxvar12 = (byte) (0x00);
	static byte dmxvar13 = (byte) (0x00);
	static byte dmxvar14 = (byte) (0x00);
	static byte dmxvar15 = (byte) (0x00);
	static byte dmxvar16 = (byte) (0x00);
	static byte dmxvar17 = (byte) (0x00);
	static byte dmxvar18 = (byte) (0x00);
	static byte dmxvar19 = (byte) (0x00);
	static byte dmxvar20 = (byte) (0x00);
	static byte dmxvar21 = (byte) (0x00);
	static byte dmxvar22 = (byte) (0x00);
	static byte dmxvar23 = (byte) (0x00);
	static byte dmxvar24 = (byte) (0x00);
	static byte dmxvar25 = (byte) (0x00);
	static byte dmxvar26 = (byte) (0x00);
	static byte dmxvar27 = (byte) (0x00);
	static byte dmxvar28 = (byte) (0x00);
	static byte dmxvar29 = (byte) (0x00);
	static byte dmxvar30 = (byte) (0x00);
	static byte dmxvar31 = (byte) (0x00);
	static byte dmxvar32 = (byte) (0x00);
	static byte dmxvar33 = (byte) (0x00);
	static byte dmxvar34 = (byte) (0x00);
	static byte dmxvar35 = (byte) (0x00);
	static byte dmxvar36 = (byte) (0x00);
	static byte dmxvar37 = (byte) (0x00);
	static byte dmxvar38 = (byte) (0x00);
	static byte dmxvar39 = (byte) (0x00);
	static byte dmxvar40 = (byte) (0x00);
	static byte dmxvar41 = (byte) (0x00);
	static byte dmxvar42 = (byte) (0x00);
	static byte dmxvar43 = (byte) (0x00);
	static byte dmxvar44 = (byte) (0x00);
	static byte dmxvar45 = (byte) (0x00);
	static byte dmxvar46 = (byte) (0x00);
	static byte dmxvar47 = (byte) (0x00);
	static byte dmxvar48 = (byte) (0x00);
	static byte dmxvar49 = (byte) (0x00);
	static byte dmxvar50 = (byte) (0x00);
	static byte dmxvar51 = (byte) (0x00);
	static byte dmxvar52 = (byte) (0x00);
	static byte dmxvar53 = (byte) (0x00);
	static byte dmxvar54 = (byte) (0x00);
	static byte dmxvar55 = (byte) (0x00);
	static byte dmxvar56 = (byte) (0x00);
	static byte dmxvar57 = (byte) (0x00);
	static byte dmxvar58 = (byte) (0x00);
	static byte dmxvar59 = (byte) (0x00);
	static byte dmxvar60 = (byte) (0x00);
	static byte dmxvar61 = (byte) (0x00);
	static byte dmxvar62 = (byte) (0x00);
	static byte dmxvar63 = (byte) (0x00);
	static byte dmxvar64 = (byte) (0x00);
	static byte dmxvar65 = (byte) (0x00);
	static byte dmxvar66 = (byte) (0x00);
	static byte dmxvar67 = (byte) (0x00);
	static byte dmxvar68 = (byte) (0x00);
	static byte dmxvar69 = (byte) (0x00);
	static byte dmxvar70 = (byte) (0x00);
	static byte dmxvar71 = (byte) (0x00);
	static byte dmxvar72 = (byte) (0x00);
	static byte dmxvar73 = (byte) (0x00);
	static byte dmxvar74 = (byte) (0x00);
	static byte dmxvar75 = (byte) (0x00);
	static byte dmxvar76 = (byte) (0x00);
	static byte dmxvar77 = (byte) (0x00);
	static byte dmxvar78 = (byte) (0x00);
	static byte dmxvar79 = (byte) (0x00);
	static byte dmxvar80 = (byte) (0x00);
	static byte dmxvar81 = (byte) (0x00);
	static byte dmxvar82 = (byte) (0x00);
	static byte dmxvar83 = (byte) (0x00);
	static byte dmxvar84 = (byte) (0x00);
	static byte dmxvar85 = (byte) (0x00);
	static byte dmxvar86 = (byte) (0x00);
	static byte dmxvar87 = (byte) (0x00);
	static byte dmxvar88 = (byte) (0x00);
	static byte dmxvar89 = (byte) (0x00);
	static byte dmxvar90 = (byte) (0x00);
	static byte dmxvar91 = (byte) (0x00);
	static byte dmxvar92 = (byte) (0x00);
	static byte dmxvar93 = (byte) (0x00);
	static byte dmxvar94 = (byte) (0x00);
	static byte dmxvar95 = (byte) (0x00);
	static byte dmxvar96 = (byte) (0x00);
	static byte dmxvar97 = (byte) (0x00);
	static byte dmxvar98 = (byte) (0x00);
	static byte dmxvar99 = (byte) (0x00);
	static byte dmxvar100 = (byte) (0x00);
	static byte dmxvar101 = (byte) (0x00);
	static byte dmxvar102 = (byte) (0x00);
	static byte dmxvar103 = (byte) (0x00);
	static byte dmxvar104 = (byte) (0x00);
	static byte dmxvar105 = (byte) (0x00);
	static byte dmxvar106 = (byte) (0x00);
	static byte dmxvar107 = (byte) (0x00);
	static byte dmxvar108 = (byte) (0x00);
	static byte dmxvar109 = (byte) (0x00);
	static byte dmxvar110 = (byte) (0x00);
	static byte dmxvar111 = (byte) (0x00);
	static byte dmxvar112 = (byte) (0x00);
	static byte dmxvar113 = (byte) (0x00);
	static byte dmxvar114 = (byte) (0x00);
	static byte dmxvar115 = (byte) (0x00);
	static byte dmxvar116 = (byte) (0x00);
	static byte dmxvar117 = (byte) (0x00);
	static byte dmxvar118 = (byte) (0x00);
	static byte dmxvar119 = (byte) (0x00);
	static byte dmxvar120 = (byte) (0x00);
	static byte dmxvar121 = (byte) (0x00);
	static byte dmxvar122 = (byte) (0x00);
	static byte dmxvar123 = (byte) (0x00);
	static byte dmxvar124 = (byte) (0x00);
	static byte dmxvar125 = (byte) (0x00);
	static byte dmxvar126 = (byte) (0x00);
	static byte dmxvar127 = (byte) (0x00);
	static byte dmxvar128 = (byte) (0x00);
	static byte dmxvar129 = (byte) (0x00);
	static byte dmxvar130 = (byte) (0x00);
	static byte dmxvar131 = (byte) (0x00);
	static byte dmxvar132 = (byte) (0x00);
	static byte dmxvar133 = (byte) (0x00);
	static byte dmxvar134 = (byte) (0x00);
	static byte dmxvar135 = (byte) (0x00);
	static byte dmxvar136 = (byte) (0x00);
	static byte dmxvar137 = (byte) (0x00);
	static byte dmxvar138 = (byte) (0x00);
	static byte dmxvar139 = (byte) (0x00);
	static byte dmxvar140 = (byte) (0x00);
	static byte dmxvar141 = (byte) (0x00);
	static byte dmxvar142 = (byte) (0x00);
	static byte dmxvar143 = (byte) (0x00);
	static byte dmxvar144 = (byte) (0x00);
	static byte dmxvar145 = (byte) (0x00);
	static byte dmxvar146 = (byte) (0x00);
	static byte dmxvar147 = (byte) (0x00);
	static byte dmxvar148 = (byte) (0x00);
	static byte dmxvar149 = (byte) (0x00);
	static byte dmxvar150 = (byte) (0x00);
	static byte dmxvar151 = (byte) (0x00);
	static byte dmxvar152 = (byte) (0x00);
	static byte dmxvar153 = (byte) (0x00);
	static byte dmxvar154 = (byte) (0x00);
	static byte dmxvar155 = (byte) (0x00);
	static byte dmxvar156 = (byte) (0x00);
	static byte dmxvar157 = (byte) (0x00);
	static byte dmxvar158 = (byte) (0x00);
	static byte dmxvar159 = (byte) (0x00);
	static byte dmxvar160 = (byte) (0x00);
	static byte dmxvar161 = (byte) (0x00);
	static byte dmxvar162 = (byte) (0x00);
	static byte dmxvar163 = (byte) (0x00);
	static byte dmxvar164 = (byte) (0x00);
	static byte dmxvar165 = (byte) (0x00);
	static byte dmxvar166 = (byte) (0x00);
	static byte dmxvar167 = (byte) (0x00);
	static byte dmxvar168 = (byte) (0x00);
	static byte dmxvar169 = (byte) (0x00);
	static byte dmxvar170 = (byte) (0x00);
	static byte dmxvar171 = (byte) (0x00);
	static byte dmxvar172 = (byte) (0x00);
	static byte dmxvar173 = (byte) (0x00);
	static byte dmxvar174 = (byte) (0x00);
	static byte dmxvar175 = (byte) (0x00);
	static byte dmxvar176 = (byte) (0x00);
	static byte dmxvar177 = (byte) (0x00);
	static byte dmxvar178 = (byte) (0x00);
	static byte dmxvar179 = (byte) (0x00);
	static byte dmxvar180 = (byte) (0x00);
	static byte dmxvar181 = (byte) (0x00);
	static byte dmxvar182 = (byte) (0x00);
	static byte dmxvar183 = (byte) (0x00);
	static byte dmxvar184 = (byte) (0x00);
	static byte dmxvar185 = (byte) (0x00);
	static byte dmxvar186 = (byte) (0x00);
	static byte dmxvar187 = (byte) (0x00);
	static byte dmxvar188 = (byte) (0x00);
	static byte dmxvar189 = (byte) (0x00);
	static byte dmxvar190 = (byte) (0x00);
	static byte dmxvar191 = (byte) (0x00);
	static byte dmxvar192 = (byte) (0x00);
	static byte dmxvar193 = (byte) (0x00);
	static byte dmxvar194 = (byte) (0x00);
	static byte dmxvar195 = (byte) (0x00);
	static byte dmxvar196 = (byte) (0x00);
	static byte dmxvar197 = (byte) (0x00);
	static byte dmxvar198 = (byte) (0x00);
	static byte dmxvar199 = (byte) (0x00);
	static byte dmxvar200 = (byte) (0x00);
	static byte dmxvar201 = (byte) (0x00);
	static byte dmxvar202 = (byte) (0x00);
	static byte dmxvar203 = (byte) (0x00);
	static byte dmxvar204 = (byte) (0x00);
	static byte dmxvar205 = (byte) (0x00);
	static byte dmxvar206 = (byte) (0x00);
	static byte dmxvar207 = (byte) (0x00);
	static byte dmxvar208 = (byte) (0x00);
	static byte dmxvar209 = (byte) (0x00);
	static byte dmxvar210 = (byte) (0x00);
	static byte dmxvar211 = (byte) (0x00);
	static byte dmxvar212 = (byte) (0x00);
	static byte dmxvar213 = (byte) (0x00);
	static byte dmxvar214 = (byte) (0x00);
	static byte dmxvar215 = (byte) (0x00);
	static byte dmxvar216 = (byte) (0x00);
	static byte dmxvar217 = (byte) (0x00);
	static byte dmxvar218 = (byte) (0x00);
	static byte dmxvar219 = (byte) (0x00);
	static byte dmxvar220 = (byte) (0x00);
	static byte dmxvar221 = (byte) (0x00);
	static byte dmxvar222 = (byte) (0x00);
	static byte dmxvar223 = (byte) (0x00);
	static byte dmxvar224 = (byte) (0x00);
	static byte dmxvar225 = (byte) (0x00);
	static byte dmxvar226 = (byte) (0x00);
	static byte dmxvar227 = (byte) (0x00);
	static byte dmxvar228 = (byte) (0x00);
	static byte dmxvar229 = (byte) (0x00);
	static byte dmxvar230 = (byte) (0x00);
	static byte dmxvar231 = (byte) (0x00);
	static byte dmxvar232 = (byte) (0x00);
	static byte dmxvar233 = (byte) (0x00);
	static byte dmxvar234 = (byte) (0x00);
	static byte dmxvar235 = (byte) (0x00);
	static byte dmxvar236 = (byte) (0x00);
	static byte dmxvar237 = (byte) (0x00);
	static byte dmxvar238 = (byte) (0x00);
	static byte dmxvar239 = (byte) (0x00);
	static byte dmxvar240 = (byte) (0x00);
	static byte dmxvar241 = (byte) (0x00);
	static byte dmxvar242 = (byte) (0x00);
	static byte dmxvar243 = (byte) (0x00);
	static byte dmxvar244 = (byte) (0x00);
	static byte dmxvar245 = (byte) (0x00);
	static byte dmxvar246 = (byte) (0x00);
	static byte dmxvar247 = (byte) (0x00);
	static byte dmxvar248 = (byte) (0x00);
	static byte dmxvar249 = (byte) (0x00);
	static byte dmxvar250 = (byte) (0x00);
	static byte dmxvar251 = (byte) (0x00);
	static byte dmxvar252 = (byte) (0x00);
	static byte dmxvar253 = (byte) (0x00);
	static byte dmxvar254 = (byte) (0x00);
	static byte dmxvar255 = (byte) (0x00);
	static byte dmxvar256 = (byte) (0x00);
	static byte dmxvar257 = (byte) (0x00);
	static byte dmxvar258 = (byte) (0x00);
	static byte dmxvar259 = (byte) (0x00);
	static byte dmxvar260 = (byte) (0x00);
	static byte dmxvar261 = (byte) (0x00);
	static byte dmxvar262 = (byte) (0x00);
	static byte dmxvar263 = (byte) (0x00);
	static byte dmxvar264 = (byte) (0x00);
	static byte dmxvar265 = (byte) (0x00);
	static byte dmxvar266 = (byte) (0x00);
	static byte dmxvar267 = (byte) (0x00);
	static byte dmxvar268 = (byte) (0x00);
	static byte dmxvar269 = (byte) (0x00);
	static byte dmxvar270 = (byte) (0x00);
	static byte dmxvar271 = (byte) (0x00);
	static byte dmxvar272 = (byte) (0x00);
	static byte dmxvar273 = (byte) (0x00);
	static byte dmxvar274 = (byte) (0x00);
	static byte dmxvar275 = (byte) (0x00);
	static byte dmxvar276 = (byte) (0x00);
	static byte dmxvar277 = (byte) (0x00);
	static byte dmxvar278 = (byte) (0x00);
	static byte dmxvar279 = (byte) (0x00);
	static byte dmxvar280 = (byte) (0x00);
	static byte dmxvar281 = (byte) (0x00);
	static byte dmxvar282 = (byte) (0x00);
	static byte dmxvar283 = (byte) (0x00);
	static byte dmxvar284 = (byte) (0x00);
	static byte dmxvar285 = (byte) (0x00);
	static byte dmxvar286 = (byte) (0x00);
	static byte dmxvar287 = (byte) (0x00);
	static byte dmxvar288 = (byte) (0x00);
	static byte dmxvar289 = (byte) (0x00);
	static byte dmxvar290 = (byte) (0x00);
	static byte dmxvar291 = (byte) (0x00);
	static byte dmxvar292 = (byte) (0x00);
	static byte dmxvar293 = (byte) (0x00);
	static byte dmxvar294 = (byte) (0x00);
	static byte dmxvar295 = (byte) (0x00);
	static byte dmxvar296 = (byte) (0x00);
	static byte dmxvar297 = (byte) (0x00);
	static byte dmxvar298 = (byte) (0x00);
	static byte dmxvar299 = (byte) (0x00);
	static byte dmxvar300 = (byte) (0x00);
	static byte dmxvar301 = (byte) (0x00);
	static byte dmxvar302 = (byte) (0x00);
	static byte dmxvar303 = (byte) (0x00);
	static byte dmxvar304 = (byte) (0x00);
	static byte dmxvar305 = (byte) (0x00);
	static byte dmxvar306 = (byte) (0x00);
	static byte dmxvar307 = (byte) (0x00);
	static byte dmxvar308 = (byte) (0x00);
	static byte dmxvar309 = (byte) (0x00);
	static byte dmxvar310 = (byte) (0x00);
	static byte dmxvar311 = (byte) (0x00);
	static byte dmxvar312 = (byte) (0x00);
	static byte dmxvar313 = (byte) (0x00);
	static byte dmxvar314 = (byte) (0x00);
	static byte dmxvar315 = (byte) (0x00);
	static byte dmxvar316 = (byte) (0x00);
	static byte dmxvar317 = (byte) (0x00);
	static byte dmxvar318 = (byte) (0x00);
	static byte dmxvar319 = (byte) (0x00);
	static byte dmxvar320 = (byte) (0x00);
	static byte dmxvar321 = (byte) (0x00);
	static byte dmxvar322 = (byte) (0x00);
	static byte dmxvar323 = (byte) (0x00);
	static byte dmxvar324 = (byte) (0x00);
	static byte dmxvar325 = (byte) (0x00);
	static byte dmxvar326 = (byte) (0x00);
	static byte dmxvar327 = (byte) (0x00);
	static byte dmxvar328 = (byte) (0x00);
	static byte dmxvar329 = (byte) (0x00);
	static byte dmxvar330 = (byte) (0x00);
	static byte dmxvar331 = (byte) (0x00);
	static byte dmxvar332 = (byte) (0x00);
	static byte dmxvar333 = (byte) (0x00);
	static byte dmxvar334 = (byte) (0x00);
	static byte dmxvar335 = (byte) (0x00);
	static byte dmxvar336 = (byte) (0x00);
	static byte dmxvar337 = (byte) (0x00);
	static byte dmxvar338 = (byte) (0x00);
	static byte dmxvar339 = (byte) (0x00);
	static byte dmxvar340 = (byte) (0x00);
	static byte dmxvar341 = (byte) (0x00);
	static byte dmxvar342 = (byte) (0x00);
	static byte dmxvar343 = (byte) (0x00);
	static byte dmxvar344 = (byte) (0x00);
	static byte dmxvar345 = (byte) (0x00);
	static byte dmxvar346 = (byte) (0x00);
	static byte dmxvar347 = (byte) (0x00);
	static byte dmxvar348 = (byte) (0x00);
	static byte dmxvar349 = (byte) (0x00);
	static byte dmxvar350 = (byte) (0x00);
	static byte dmxvar351 = (byte) (0x00);
	static byte dmxvar352 = (byte) (0x00);
	static byte dmxvar353 = (byte) (0x00);
	static byte dmxvar354 = (byte) (0x00);
	static byte dmxvar355 = (byte) (0x00);
	static byte dmxvar356 = (byte) (0x00);
	static byte dmxvar357 = (byte) (0x00);
	static byte dmxvar358 = (byte) (0x00);
	static byte dmxvar359 = (byte) (0x00);
	static byte dmxvar360 = (byte) (0x00);
	static byte dmxvar361 = (byte) (0x00);
	static byte dmxvar362 = (byte) (0x00);
	static byte dmxvar363 = (byte) (0x00);
	static byte dmxvar364 = (byte) (0x00);
	static byte dmxvar365 = (byte) (0x00);
	static byte dmxvar366 = (byte) (0x00);
	static byte dmxvar367 = (byte) (0x00);
	static byte dmxvar368 = (byte) (0x00);
	static byte dmxvar369 = (byte) (0x00);
	static byte dmxvar370 = (byte) (0x00);
	static byte dmxvar371 = (byte) (0x00);
	static byte dmxvar372 = (byte) (0x00);
	static byte dmxvar373 = (byte) (0x00);
	static byte dmxvar374 = (byte) (0x00);
	static byte dmxvar375 = (byte) (0x00);
	static byte dmxvar376 = (byte) (0x00);
	static byte dmxvar377 = (byte) (0x00);
	static byte dmxvar378 = (byte) (0x00);
	static byte dmxvar379 = (byte) (0x00);
	static byte dmxvar380 = (byte) (0x00);
	static byte dmxvar381 = (byte) (0x00);
	static byte dmxvar382 = (byte) (0x00);
	static byte dmxvar383 = (byte) (0x00);
	static byte dmxvar384 = (byte) (0x00);
	static byte dmxvar385 = (byte) (0x00);
	static byte dmxvar386 = (byte) (0x00);
	static byte dmxvar387 = (byte) (0x00);
	static byte dmxvar388 = (byte) (0x00);
	static byte dmxvar389 = (byte) (0x00);
	static byte dmxvar390 = (byte) (0x00);
	static byte dmxvar391 = (byte) (0x00);
	static byte dmxvar392 = (byte) (0x00);
	static byte dmxvar393 = (byte) (0x00);
	static byte dmxvar394 = (byte) (0x00);
	static byte dmxvar395 = (byte) (0x00);
	static byte dmxvar396 = (byte) (0x00);
	static byte dmxvar397 = (byte) (0x00);
	static byte dmxvar398 = (byte) (0x00);
	static byte dmxvar399 = (byte) (0x00);
	static byte dmxvar400 = (byte) (0x00);
	static byte dmxvar401 = (byte) (0x00);
	static byte dmxvar402 = (byte) (0x00);
	static byte dmxvar403 = (byte) (0x00);
	static byte dmxvar404 = (byte) (0x00);
	static byte dmxvar405 = (byte) (0x00);
	static byte dmxvar406 = (byte) (0x00);
	static byte dmxvar407 = (byte) (0x00);
	static byte dmxvar408 = (byte) (0x00);
	static byte dmxvar409 = (byte) (0x00);
	static byte dmxvar410 = (byte) (0x00);
	static byte dmxvar411 = (byte) (0x00);
	static byte dmxvar412 = (byte) (0x00);
	static byte dmxvar413 = (byte) (0x00);
	static byte dmxvar414 = (byte) (0x00);
	static byte dmxvar415 = (byte) (0x00);
	static byte dmxvar416 = (byte) (0x00);
	static byte dmxvar417 = (byte) (0x00);
	static byte dmxvar418 = (byte) (0x00);
	static byte dmxvar419 = (byte) (0x00);
	static byte dmxvar420 = (byte) (0x00);
	static byte dmxvar421 = (byte) (0x00);
	static byte dmxvar422 = (byte) (0x00);
	static byte dmxvar423 = (byte) (0x00);
	static byte dmxvar424 = (byte) (0x00);
	static byte dmxvar425 = (byte) (0x00);
	static byte dmxvar426 = (byte) (0x00);
	static byte dmxvar427 = (byte) (0x00);
	static byte dmxvar428 = (byte) (0x00);
	static byte dmxvar429 = (byte) (0x00);
	static byte dmxvar430 = (byte) (0x00);
	static byte dmxvar431 = (byte) (0x00);
	static byte dmxvar432 = (byte) (0x00);
	static byte dmxvar433 = (byte) (0x00);
	static byte dmxvar434 = (byte) (0x00);
	static byte dmxvar435 = (byte) (0x00);
	static byte dmxvar436 = (byte) (0x00);
	static byte dmxvar437 = (byte) (0x00);
	static byte dmxvar438 = (byte) (0x00);
	static byte dmxvar439 = (byte) (0x00);
	static byte dmxvar440 = (byte) (0x00);
	static byte dmxvar441 = (byte) (0x00);
	static byte dmxvar442 = (byte) (0x00);
	static byte dmxvar443 = (byte) (0x00);
	static byte dmxvar444 = (byte) (0x00);
	static byte dmxvar445 = (byte) (0x00);
	static byte dmxvar446 = (byte) (0x00);
	static byte dmxvar447 = (byte) (0x00);
	static byte dmxvar448 = (byte) (0x00);
	static byte dmxvar449 = (byte) (0x00);
	static byte dmxvar450 = (byte) (0x00);
	static byte dmxvar451 = (byte) (0x00);
	static byte dmxvar452 = (byte) (0x00);
	static byte dmxvar453 = (byte) (0x00);
	static byte dmxvar454 = (byte) (0x00);
	static byte dmxvar455 = (byte) (0x00);
	static byte dmxvar456 = (byte) (0x00);
	static byte dmxvar457 = (byte) (0x00);
	static byte dmxvar458 = (byte) (0x00);
	static byte dmxvar459 = (byte) (0x00);
	static byte dmxvar460 = (byte) (0x00);
	static byte dmxvar461 = (byte) (0x00);
	static byte dmxvar462 = (byte) (0x00);
	static byte dmxvar463 = (byte) (0x00);
	static byte dmxvar464 = (byte) (0x00);
	static byte dmxvar465 = (byte) (0x00);
	static byte dmxvar466 = (byte) (0x00);
	static byte dmxvar467 = (byte) (0x00);
	static byte dmxvar468 = (byte) (0x00);
	static byte dmxvar469 = (byte) (0x00);
	static byte dmxvar470 = (byte) (0x00);
	static byte dmxvar471 = (byte) (0x00);
	static byte dmxvar472 = (byte) (0x00);
	static byte dmxvar473 = (byte) (0x00);
	static byte dmxvar474 = (byte) (0x00);
	static byte dmxvar475 = (byte) (0x00);
	static byte dmxvar476 = (byte) (0x00);
	static byte dmxvar477 = (byte) (0x00);
	static byte dmxvar478 = (byte) (0x00);
	static byte dmxvar479 = (byte) (0x00);
	static byte dmxvar480 = (byte) (0x00);
	static byte dmxvar481 = (byte) (0x00);
	static byte dmxvar482 = (byte) (0x00);
	static byte dmxvar483 = (byte) (0x00);
	static byte dmxvar484 = (byte) (0x00);
	static byte dmxvar485 = (byte) (0x00);
	static byte dmxvar486 = (byte) (0x00);
	static byte dmxvar487 = (byte) (0x00);
	static byte dmxvar488 = (byte) (0x00);
	static byte dmxvar489 = (byte) (0x00);
	static byte dmxvar490 = (byte) (0x00);
	static byte dmxvar491 = (byte) (0x00);
	static byte dmxvar492 = (byte) (0x00);
	static byte dmxvar493 = (byte) (0x00);
	static byte dmxvar494 = (byte) (0x00);
	static byte dmxvar495 = (byte) (0x00);
	static byte dmxvar496 = (byte) (0x00);
	static byte dmxvar497 = (byte) (0x00);
	static byte dmxvar498 = (byte) (0x00);
	static byte dmxvar499 = (byte) (0x00);
	static byte dmxvar500 = (byte) (0x00);
	static byte dmxvar501 = (byte) (0x00);
	static byte dmxvar502 = (byte) (0x00);
	static byte dmxvar503 = (byte) (0x00);
	static byte dmxvar504 = (byte) (0x00);
	static byte dmxvar505 = (byte) (0x00);
	static byte dmxvar506 = (byte) (0x00);
	static byte dmxvar507 = (byte) (0x00);
	static byte dmxvar508 = (byte) (0x00);
	static byte dmxvar509 = (byte) (0x00);
	static byte dmxvar510 = (byte) (0x00);
	static byte dmxvar511 = (byte) (0x00);
	static byte dmxvar512 = (byte) (0x00);
	static boolean dmxBool = true; //Sets boolean loop as true for the later loop
	static int DMXChanVar;

	

	public static void main(String[] args) throws IOException, InterruptedException {
		
		System.out.println("Welcome to Line-O-DMX VERSION 1.0!");
		System.out.println("Created by Ben Arrigo - rusettsten@gmail.com");
		System.out.println("DEC 23 2016");
		System.out.println(" ");
		System.out.println("Testing...");
		dmxSend();
	}
	public static void dmxSend() throws IOException, InterruptedException{
		JD2XX dmx = new JD2XX(); //Creates dmx device variable
		System.out.println("Created DMX Device Variable...");
		//If you keep getting an error, go online and find a JD2XX library file (.so or.dll) that fits your architecture.
		dmx.open(0); //opens device based on USB input
		System.out.println("Successfully located DMX Device!...");
		dmx.setBaudRate(25000);
	    dmx.setDataCharacteristics(JD2XX.BITS_8, JD2XX.STOP_BITS_2, JD2XX.PARITY_NONE);
	    dmx.setLatencyTimer(88);
	    dmx.setBitMode(0, 0);
	    dmx.setFlowControl(JD2XX.FLOW_NONE,0,0);
	    dmx.setTimeouts(1000,1000);
	    System.out.println("Successfully set Data Characteristics!...");
		System.out.println("Entering the loop...");
		
		//Thread stuff goes here, so that everything else is working first.
		Main obj=new Main();
		Thread commandThread = new Thread(obj);
		commandThread.start();
		
		FadePoint.main();
		
		do{
			dmx.setBaudRate(125000);
			dmx.write((byte)0x00);
			
			dmx.setBaudRate(250000);
			
			dmx.write((byte)0x00);//Start Code DO NOT TAMPER WITH
			dmx.write(dmxvar1);
			dmx.write(dmxvar2);
			dmx.write(dmxvar3);
			dmx.write(dmxvar4);
			dmx.write(dmxvar5);
			dmx.write(dmxvar6);
			dmx.write(dmxvar7);
			dmx.write(dmxvar8);
			dmx.write(dmxvar9);
			dmx.write(dmxvar10);
			dmx.write(dmxvar11);
			dmx.write(dmxvar12);
			dmx.write(dmxvar13);
			dmx.write(dmxvar14);
			dmx.write(dmxvar15);
			dmx.write(dmxvar16);
			dmx.write(dmxvar17);
			dmx.write(dmxvar18);
			dmx.write(dmxvar19);
			dmx.write(dmxvar20);
			dmx.write(dmxvar21);
			dmx.write(dmxvar22);
			dmx.write(dmxvar23);
			dmx.write(dmxvar24);
			dmx.write(dmxvar25);
			dmx.write(dmxvar26);
			dmx.write(dmxvar27);
			dmx.write(dmxvar28);
			dmx.write(dmxvar29);
			dmx.write(dmxvar30);
			dmx.write(dmxvar31);
			dmx.write(dmxvar32);
			dmx.write(dmxvar33);
			dmx.write(dmxvar34);
			dmx.write(dmxvar35);
			dmx.write(dmxvar36);
			dmx.write(dmxvar37);
			dmx.write(dmxvar38);
			dmx.write(dmxvar39);
			dmx.write(dmxvar40);
			dmx.write(dmxvar41);
			dmx.write(dmxvar42);
			dmx.write(dmxvar43);
			dmx.write(dmxvar44);
			dmx.write(dmxvar45);
			dmx.write(dmxvar46);
			dmx.write(dmxvar47);
			dmx.write(dmxvar48);
			dmx.write(dmxvar49);
			dmx.write(dmxvar50);
			dmx.write(dmxvar51);
			dmx.write(dmxvar52);
			dmx.write(dmxvar53);
			dmx.write(dmxvar54);
			dmx.write(dmxvar55);
			dmx.write(dmxvar56);
			dmx.write(dmxvar57);
			dmx.write(dmxvar58);
			dmx.write(dmxvar59);
			dmx.write(dmxvar60);
			dmx.write(dmxvar61);
			dmx.write(dmxvar62);
			dmx.write(dmxvar63);
			dmx.write(dmxvar64);
			dmx.write(dmxvar65);
			dmx.write(dmxvar66);
			dmx.write(dmxvar67);
			dmx.write(dmxvar68);
			dmx.write(dmxvar69);
			dmx.write(dmxvar70);
			dmx.write(dmxvar71);
			dmx.write(dmxvar72);
			dmx.write(dmxvar73);
			dmx.write(dmxvar74);
			dmx.write(dmxvar75);
			dmx.write(dmxvar76);
			dmx.write(dmxvar77);
			dmx.write(dmxvar78);
			dmx.write(dmxvar79);
			dmx.write(dmxvar80);
			dmx.write(dmxvar81);
			dmx.write(dmxvar82);
			dmx.write(dmxvar83);
			dmx.write(dmxvar84);
			dmx.write(dmxvar85);
			dmx.write(dmxvar86);
			dmx.write(dmxvar87);
			dmx.write(dmxvar88);
			dmx.write(dmxvar89);
			dmx.write(dmxvar90);
			dmx.write(dmxvar91);
			dmx.write(dmxvar92);
			dmx.write(dmxvar93);
			dmx.write(dmxvar94);
			dmx.write(dmxvar95);
			dmx.write(dmxvar96);
			dmx.write(dmxvar97);
			dmx.write(dmxvar98);
			dmx.write(dmxvar99);
			dmx.write(dmxvar100);
			dmx.write(dmxvar101);
			dmx.write(dmxvar102);
			dmx.write(dmxvar103);
			dmx.write(dmxvar104);
			dmx.write(dmxvar105);
			dmx.write(dmxvar106);
			dmx.write(dmxvar107);
			dmx.write(dmxvar108);
			dmx.write(dmxvar109);
			dmx.write(dmxvar110);
			dmx.write(dmxvar111);
			dmx.write(dmxvar112);
			dmx.write(dmxvar113);
			dmx.write(dmxvar114);
			dmx.write(dmxvar115);
			dmx.write(dmxvar116);
			dmx.write(dmxvar117);
			dmx.write(dmxvar118);
			dmx.write(dmxvar119);
			dmx.write(dmxvar120);
			dmx.write(dmxvar121);
			dmx.write(dmxvar122);
			dmx.write(dmxvar123);
			dmx.write(dmxvar124);
			dmx.write(dmxvar125);
			dmx.write(dmxvar126);
			dmx.write(dmxvar127);
			dmx.write(dmxvar128);
			dmx.write(dmxvar129);
			dmx.write(dmxvar130);
			dmx.write(dmxvar131);
			dmx.write(dmxvar132);
			dmx.write(dmxvar133);
			dmx.write(dmxvar134);
			dmx.write(dmxvar135);
			dmx.write(dmxvar136);
			dmx.write(dmxvar137);
			dmx.write(dmxvar138);
			dmx.write(dmxvar139);
			dmx.write(dmxvar140);
			dmx.write(dmxvar141);
			dmx.write(dmxvar142);
			dmx.write(dmxvar143);
			dmx.write(dmxvar144);
			dmx.write(dmxvar145);
			dmx.write(dmxvar146);
			dmx.write(dmxvar147);
			dmx.write(dmxvar148);
			dmx.write(dmxvar149);
			dmx.write(dmxvar150);
			dmx.write(dmxvar151);
			dmx.write(dmxvar152);
			dmx.write(dmxvar153);
			dmx.write(dmxvar154);
			dmx.write(dmxvar155);
			dmx.write(dmxvar156);
			dmx.write(dmxvar157);
			dmx.write(dmxvar158);
			dmx.write(dmxvar159);
			dmx.write(dmxvar160);
			dmx.write(dmxvar161);
			dmx.write(dmxvar162);
			dmx.write(dmxvar163);
			dmx.write(dmxvar164);
			dmx.write(dmxvar165);
			dmx.write(dmxvar166);
			dmx.write(dmxvar167);
			dmx.write(dmxvar168);
			dmx.write(dmxvar169);
			dmx.write(dmxvar170);
			dmx.write(dmxvar171);
			dmx.write(dmxvar172);
			dmx.write(dmxvar173);
			dmx.write(dmxvar174);
			dmx.write(dmxvar175);
			dmx.write(dmxvar176);
			dmx.write(dmxvar177);
			dmx.write(dmxvar178);
			dmx.write(dmxvar179);
			dmx.write(dmxvar180);
			dmx.write(dmxvar181);
			dmx.write(dmxvar182);
			dmx.write(dmxvar183);
			dmx.write(dmxvar184);
			dmx.write(dmxvar185);
			dmx.write(dmxvar186);
			dmx.write(dmxvar187);
			dmx.write(dmxvar188);
			dmx.write(dmxvar189);
			dmx.write(dmxvar190);
			dmx.write(dmxvar191);
			dmx.write(dmxvar192);
			dmx.write(dmxvar193);
			dmx.write(dmxvar194);
			dmx.write(dmxvar195);
			dmx.write(dmxvar196);
			dmx.write(dmxvar197);
			dmx.write(dmxvar198);
			dmx.write(dmxvar199);
			dmx.write(dmxvar200);
			dmx.write(dmxvar201);
			dmx.write(dmxvar202);
			dmx.write(dmxvar203);
			dmx.write(dmxvar204);
			dmx.write(dmxvar205);
			dmx.write(dmxvar206);
			dmx.write(dmxvar207);
			dmx.write(dmxvar208);
			dmx.write(dmxvar209);
			dmx.write(dmxvar210);
			dmx.write(dmxvar211);
			dmx.write(dmxvar212);
			dmx.write(dmxvar213);
			dmx.write(dmxvar214);
			dmx.write(dmxvar215);
			dmx.write(dmxvar216);
			dmx.write(dmxvar217);
			dmx.write(dmxvar218);
			dmx.write(dmxvar219);
			dmx.write(dmxvar220);
			dmx.write(dmxvar221);
			dmx.write(dmxvar222);
			dmx.write(dmxvar223);
			dmx.write(dmxvar224);
			dmx.write(dmxvar225);
			dmx.write(dmxvar226);
			dmx.write(dmxvar227);
			dmx.write(dmxvar228);
			dmx.write(dmxvar229);
			dmx.write(dmxvar230);
			dmx.write(dmxvar231);
			dmx.write(dmxvar232);
			dmx.write(dmxvar233);
			dmx.write(dmxvar234);
			dmx.write(dmxvar235);
			dmx.write(dmxvar236);
			dmx.write(dmxvar237);
			dmx.write(dmxvar238);
			dmx.write(dmxvar239);
			dmx.write(dmxvar240);
			dmx.write(dmxvar241);
			dmx.write(dmxvar242);
			dmx.write(dmxvar243);
			dmx.write(dmxvar244);
			dmx.write(dmxvar245);
			dmx.write(dmxvar246);
			dmx.write(dmxvar247);
			dmx.write(dmxvar248);
			dmx.write(dmxvar249);
			dmx.write(dmxvar250);
			dmx.write(dmxvar251);
			dmx.write(dmxvar252);
			dmx.write(dmxvar253);
			dmx.write(dmxvar254);
			dmx.write(dmxvar255);
			dmx.write(dmxvar256);
			dmx.write(dmxvar257);
			dmx.write(dmxvar258);
			dmx.write(dmxvar259);
			dmx.write(dmxvar260);
			dmx.write(dmxvar261);
			dmx.write(dmxvar262);
			dmx.write(dmxvar263);
			dmx.write(dmxvar264);
			dmx.write(dmxvar265);
			dmx.write(dmxvar266);
			dmx.write(dmxvar267);
			dmx.write(dmxvar268);
			dmx.write(dmxvar269);
			dmx.write(dmxvar270);
			dmx.write(dmxvar271);
			dmx.write(dmxvar272);
			dmx.write(dmxvar273);
			dmx.write(dmxvar274);
			dmx.write(dmxvar275);
			dmx.write(dmxvar276);
			dmx.write(dmxvar277);
			dmx.write(dmxvar278);
			dmx.write(dmxvar279);
			dmx.write(dmxvar280);
			dmx.write(dmxvar281);
			dmx.write(dmxvar282);
			dmx.write(dmxvar283);
			dmx.write(dmxvar284);
			dmx.write(dmxvar285);
			dmx.write(dmxvar286);
			dmx.write(dmxvar287);
			dmx.write(dmxvar288);
			dmx.write(dmxvar289);
			dmx.write(dmxvar290);
			dmx.write(dmxvar291);
			dmx.write(dmxvar292);
			dmx.write(dmxvar293);
			dmx.write(dmxvar294);
			dmx.write(dmxvar295);
			dmx.write(dmxvar296);
			dmx.write(dmxvar297);
			dmx.write(dmxvar298);
			dmx.write(dmxvar299);
			dmx.write(dmxvar300);
			dmx.write(dmxvar301);
			dmx.write(dmxvar302);
			dmx.write(dmxvar303);
			dmx.write(dmxvar304);
			dmx.write(dmxvar305);
			dmx.write(dmxvar306);
			dmx.write(dmxvar307);
			dmx.write(dmxvar308);
			dmx.write(dmxvar309);
			dmx.write(dmxvar310);
			dmx.write(dmxvar311);
			dmx.write(dmxvar312);
			dmx.write(dmxvar313);
			dmx.write(dmxvar314);
			dmx.write(dmxvar315);
			dmx.write(dmxvar316);
			dmx.write(dmxvar317);
			dmx.write(dmxvar318);
			dmx.write(dmxvar319);
			dmx.write(dmxvar320);
			dmx.write(dmxvar321);
			dmx.write(dmxvar322);
			dmx.write(dmxvar323);
			dmx.write(dmxvar324);
			dmx.write(dmxvar325);
			dmx.write(dmxvar326);
			dmx.write(dmxvar327);
			dmx.write(dmxvar328);
			dmx.write(dmxvar329);
			dmx.write(dmxvar330);
			dmx.write(dmxvar331);
			dmx.write(dmxvar332);
			dmx.write(dmxvar333);
			dmx.write(dmxvar334);
			dmx.write(dmxvar335);
			dmx.write(dmxvar336);
			dmx.write(dmxvar337);
			dmx.write(dmxvar338);
			dmx.write(dmxvar339);
			dmx.write(dmxvar340);
			dmx.write(dmxvar341);
			dmx.write(dmxvar342);
			dmx.write(dmxvar343);
			dmx.write(dmxvar344);
			dmx.write(dmxvar345);
			dmx.write(dmxvar346);
			dmx.write(dmxvar347);
			dmx.write(dmxvar348);
			dmx.write(dmxvar349);
			dmx.write(dmxvar350);
			dmx.write(dmxvar351);
			dmx.write(dmxvar352);
			dmx.write(dmxvar353);
			dmx.write(dmxvar354);
			dmx.write(dmxvar355);
			dmx.write(dmxvar356);
			dmx.write(dmxvar357);
			dmx.write(dmxvar358);
			dmx.write(dmxvar359);
			dmx.write(dmxvar360);
			dmx.write(dmxvar361);
			dmx.write(dmxvar362);
			dmx.write(dmxvar363);
			dmx.write(dmxvar364);
			dmx.write(dmxvar365);
			dmx.write(dmxvar366);
			dmx.write(dmxvar367);
			dmx.write(dmxvar368);
			dmx.write(dmxvar369);
			dmx.write(dmxvar370);
			dmx.write(dmxvar371);
			dmx.write(dmxvar372);
			dmx.write(dmxvar373);
			dmx.write(dmxvar374);
			dmx.write(dmxvar375);
			dmx.write(dmxvar376);
			dmx.write(dmxvar377);
			dmx.write(dmxvar378);
			dmx.write(dmxvar379);
			dmx.write(dmxvar380);
			dmx.write(dmxvar381);
			dmx.write(dmxvar382);
			dmx.write(dmxvar383);
			dmx.write(dmxvar384);
			dmx.write(dmxvar385);
			dmx.write(dmxvar386);
			dmx.write(dmxvar387);
			dmx.write(dmxvar388);
			dmx.write(dmxvar389);
			dmx.write(dmxvar390);
			dmx.write(dmxvar391);
			dmx.write(dmxvar392);
			dmx.write(dmxvar393);
			dmx.write(dmxvar394);
			dmx.write(dmxvar395);
			dmx.write(dmxvar396);
			dmx.write(dmxvar397);
			dmx.write(dmxvar398);
			dmx.write(dmxvar399);
			dmx.write(dmxvar400);
			dmx.write(dmxvar401);
			dmx.write(dmxvar402);
			dmx.write(dmxvar403);
			dmx.write(dmxvar404);
			dmx.write(dmxvar405);
			dmx.write(dmxvar406);
			dmx.write(dmxvar407);
			dmx.write(dmxvar408);
			dmx.write(dmxvar409);
			dmx.write(dmxvar410);
			dmx.write(dmxvar411);
			dmx.write(dmxvar412);
			dmx.write(dmxvar413);
			dmx.write(dmxvar414);
			dmx.write(dmxvar415);
			dmx.write(dmxvar416);
			dmx.write(dmxvar417);
			dmx.write(dmxvar418);
			dmx.write(dmxvar419);
			dmx.write(dmxvar420);
			dmx.write(dmxvar421);
			dmx.write(dmxvar422);
			dmx.write(dmxvar423);
			dmx.write(dmxvar424);
			dmx.write(dmxvar425);
			dmx.write(dmxvar426);
			dmx.write(dmxvar427);
			dmx.write(dmxvar428);
			dmx.write(dmxvar429);
			dmx.write(dmxvar430);
			dmx.write(dmxvar431);
			dmx.write(dmxvar432);
			dmx.write(dmxvar433);
			dmx.write(dmxvar434);
			dmx.write(dmxvar435);
			dmx.write(dmxvar436);
			dmx.write(dmxvar437);
			dmx.write(dmxvar438);
			dmx.write(dmxvar439);
			dmx.write(dmxvar440);
			dmx.write(dmxvar441);
			dmx.write(dmxvar442);
			dmx.write(dmxvar443);
			dmx.write(dmxvar444);
			dmx.write(dmxvar445);
			dmx.write(dmxvar446);
			dmx.write(dmxvar447);
			dmx.write(dmxvar448);
			dmx.write(dmxvar449);
			dmx.write(dmxvar450);
			dmx.write(dmxvar451);
			dmx.write(dmxvar452);
			dmx.write(dmxvar453);
			dmx.write(dmxvar454);
			dmx.write(dmxvar455);
			dmx.write(dmxvar456);
			dmx.write(dmxvar457);
			dmx.write(dmxvar458);
			dmx.write(dmxvar459);
			dmx.write(dmxvar460);
			dmx.write(dmxvar461);
			dmx.write(dmxvar462);
			dmx.write(dmxvar463);
			dmx.write(dmxvar464);
			dmx.write(dmxvar465);
			dmx.write(dmxvar466);
			dmx.write(dmxvar467);
			dmx.write(dmxvar468);
			dmx.write(dmxvar469);
			dmx.write(dmxvar470);
			dmx.write(dmxvar471);
			dmx.write(dmxvar472);
			dmx.write(dmxvar473);
			dmx.write(dmxvar474);
			dmx.write(dmxvar475);
			dmx.write(dmxvar476);
			dmx.write(dmxvar477);
			dmx.write(dmxvar478);
			dmx.write(dmxvar479);
			dmx.write(dmxvar480);
			dmx.write(dmxvar481);
			dmx.write(dmxvar482);
			dmx.write(dmxvar483);
			dmx.write(dmxvar484);
			dmx.write(dmxvar485);
			dmx.write(dmxvar486);
			dmx.write(dmxvar487);
			dmx.write(dmxvar488);
			dmx.write(dmxvar489);
			dmx.write(dmxvar490);
			dmx.write(dmxvar491);
			dmx.write(dmxvar492);
			dmx.write(dmxvar493);
			dmx.write(dmxvar494);
			dmx.write(dmxvar495);
			dmx.write(dmxvar496);
			dmx.write(dmxvar497);
			dmx.write(dmxvar498);
			dmx.write(dmxvar499);
			dmx.write(dmxvar500);
			dmx.write(dmxvar501);
			dmx.write(dmxvar502);
			dmx.write(dmxvar503);
			dmx.write(dmxvar504);
			dmx.write(dmxvar505);
			dmx.write(dmxvar506);
			dmx.write(dmxvar507);
			dmx.write(dmxvar508);
			dmx.write(dmxvar509);
			dmx.write(dmxvar510);
			dmx.write(dmxvar511);
			dmx.write(dmxvar512);
			dmx.write((byte)0xFF); //End Code DO NOT TAMPER WITH
			
			Thread.sleep(1000/44); //This is the equivalent of 1/44, meaning it transmits 44 times a second.
		}while(dmxBool);
		
	}
	
//Thread stuff goes here
	public void run(){
		do{
		//Console Commands
		//Gets Input
		Scanner scan = new Scanner(System.in);
		String command = scan.next();

		if(command.equals("stop")){
			System.out.println("STOPPING DCC...");
			System.exit(0);
		}else if (command.equals(".")){ //Single Channel Intensity Changer
			System.out.println("Enter channel number...");
			int dmxChan = scan.nextInt();
			System.out.println("Enter intensity... (0-255)");
			int dmxInt = scan.nextInt();
			DMXReturns.dmxIntFinder(dmxChan,dmxInt); //Sends it to DMX Int Finder Function
				
		}else if(command.equals("/")){ //All Channels Intensity
			System.out.println("Enter intensity for all channels...(0-255)");
			int dmxInt = scan.nextInt();
			DMXReturns.dmxIntAll(dmxInt);
		}else if(command.equals("*")){ //FadePoint System Input
			System.out.println("Choose a fadepoint with '*' (0-9) !");
		}else if(command.equals("*1")){
			System.out.println("Choose a higher fadepoint!");
		}else if(command.equals("*2")){
			FadePoint.fadePoint = 0;
			
			System.out.println("Enter fadepoint channel...");
			FadePoint.fadeChan = scan.nextInt();
			System.out.println("Enter 1st fadepoint value (0-255)...");
			FadePoint.fadePoint1 = scan.nextInt();
			System.out.println("Enter 2nd fadepoint value (0-255)...");
			FadePoint.fadePoint2 = scan.nextInt();
			System.out.println("Enter a fade time (in Seconds)...");
			FadePoint.fadeTimer = (long)((1000) * (scan.nextFloat()));
			System.out.println("Enter a pause time (in Seconds)...");
			FadePoint.fadePause = (long)((1000) * (scan.nextFloat()));
			
			//Nice bit of math
			if(FadePoint.fadePoint1 >= FadePoint.fadePoint2){ //First fadeGap Calc (always Positive)
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = false; //If FP1 is bigger than FP2
			}else{
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = true;
			}
			if(FadePoint.fadePoint2 >= FadePoint.fadePoint1){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = false;
			}else{
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = true;
			}
			
			FadePoint.fadePoint = 2;
			FadePoint.fadeAccess2 = 0;
			DMXReturns.dmxIntFinder(FadePoint.fadeChan,FadePoint.fadePoint1);
			
		}else if(command.equals("*3")){
			FadePoint.fadePoint = 0;
			
			System.out.println("Enter fadepoint channel...");
			FadePoint.fadeChan = scan.nextInt();
			System.out.println("Enter 1st fadepoint value (0-255)...");
			FadePoint.fadePoint1 = scan.nextInt();
			System.out.println("Enter 2nd fadepoint value (0-255)...");
			FadePoint.fadePoint2 = scan.nextInt();
			System.out.println("Enter 3rd fadepoint value (0-255)...");
			FadePoint.fadePoint3 = scan.nextInt();
			System.out.println("Enter a fade time (in Seconds)...");
			FadePoint.fadeTimer = (long)((1000) * (scan.nextFloat()));
			System.out.println("Enter a pause time (in Seconds)...");
			FadePoint.fadePause = (long)((1000) * (scan.nextFloat()));
			
			//Nice bit of math
			if(FadePoint.fadePoint1 >= FadePoint.fadePoint2){ //First fadeGap Calc (always Positive)
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = false; //If FP1 is bigger than FP2
			}else{
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = true;
			}
			if(FadePoint.fadePoint2 >= FadePoint.fadePoint3){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint3)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = false;
			}else{
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint3 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = true;
			}
			if(FadePoint.fadePoint3 >= FadePoint.fadePoint1){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap3 = (float) ((FadePoint.fadePoint3 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool3 = false;
			}else{
				FadePoint.fadeGap3 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint3)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool3 = true;
			}
			
			FadePoint.fadePoint = 3;
			FadePoint.fadeAccess2 = 0;
			DMXReturns.dmxIntFinder(FadePoint.fadeChan,FadePoint.fadePoint1);
			
		
		}else if(command.equals("*4")){
			FadePoint.fadePoint = 0;
			
			System.out.println("Enter fadepoint channel...");
			FadePoint.fadeChan = scan.nextInt();
			System.out.println("Enter 1st fadepoint value (0-255)...");
			FadePoint.fadePoint1 = scan.nextInt();
			System.out.println("Enter 2nd fadepoint value (0-255)...");
			FadePoint.fadePoint2 = scan.nextInt();
			System.out.println("Enter 3rd fadepoint value (0-255)...");
			FadePoint.fadePoint3 = scan.nextInt();
			System.out.println("Enter 4th fadepoint value (0-255)...");
			FadePoint.fadePoint4 = scan.nextInt();
			System.out.println("Enter a fade time (in Seconds)...");
			FadePoint.fadeTimer = (long)((1000) * (scan.nextFloat()));
			System.out.println("Enter a pause time (in Seconds)...");
			FadePoint.fadePause = (long)((1000) * (scan.nextFloat()));
			
			//Nice bit of math
			if(FadePoint.fadePoint1 >= FadePoint.fadePoint2){ //First fadeGap Calc (always Positive)
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = false; //If FP1 is bigger than FP2
			}else{
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = true;
			}
			if(FadePoint.fadePoint2 >= FadePoint.fadePoint3){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint3)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = false;
			}else{
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint3 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = true;
			}
			if(FadePoint.fadePoint3 >= FadePoint.fadePoint4){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap3 = (float) ((FadePoint.fadePoint3 - FadePoint.fadePoint4)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool3 = false;
			}else{
				FadePoint.fadeGap3 = (float) ((FadePoint.fadePoint4 - FadePoint.fadePoint3)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool3 = true;
			}
			if(FadePoint.fadePoint4 >= FadePoint.fadePoint1){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap4 = (float) ((FadePoint.fadePoint4 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool4 = false;
			}else{
				FadePoint.fadeGap4 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint4)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool4 = true;
			}
			
			FadePoint.fadePoint = 4;
			FadePoint.fadeAccess2 = 0;
			DMXReturns.dmxIntFinder(FadePoint.fadeChan,FadePoint.fadePoint1);
			
		
		}else if(command.equals("*5")){
			FadePoint.fadePoint = 0;
			
			System.out.println("Enter fadepoint channel...");
			FadePoint.fadeChan = scan.nextInt();
			System.out.println("Enter 1st fadepoint value (0-255)...");
			FadePoint.fadePoint1 = scan.nextInt();
			System.out.println("Enter 2nd fadepoint value (0-255)...");
			FadePoint.fadePoint2 = scan.nextInt();
			System.out.println("Enter 3rd fadepoint value (0-255)...");
			FadePoint.fadePoint3 = scan.nextInt();
			System.out.println("Enter 4th fadepoint value (0-255)...");
			FadePoint.fadePoint4 = scan.nextInt();
			System.out.println("Enter 5th fadepoint value (0-255)...");
			FadePoint.fadePoint5 = scan.nextInt();
			System.out.println("Enter a fade time (in Seconds)...");
			FadePoint.fadeTimer = (long)((1000) * (scan.nextFloat()));
			System.out.println("Enter a pause time (in Seconds)...");
			FadePoint.fadePause = (long)((1000) * (scan.nextFloat()));
			
			//Nice bit of math
			if(FadePoint.fadePoint1 >= FadePoint.fadePoint2){ //First fadeGap Calc (always Positive)
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = false; //If FP1 is bigger than FP2
			}else{
				FadePoint.fadeGap1 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool1 = true;
			}
			if(FadePoint.fadePoint2 >= FadePoint.fadePoint3){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint2 - FadePoint.fadePoint3)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = false;
			}else{
				FadePoint.fadeGap2 = (float) ((FadePoint.fadePoint3 - FadePoint.fadePoint2)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool2 = true;
			}
			if(FadePoint.fadePoint3 >= FadePoint.fadePoint4){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap3 = (float) ((FadePoint.fadePoint3 - FadePoint.fadePoint4)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool3 = false;
			}else{
				FadePoint.fadeGap3 = (float) ((FadePoint.fadePoint4 - FadePoint.fadePoint3)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool3 = true;
			}
			if(FadePoint.fadePoint4 >= FadePoint.fadePoint5){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap4 = (float) ((FadePoint.fadePoint4 - FadePoint.fadePoint5)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool4 = false;
			}else{
				FadePoint.fadeGap4 = (float) ((FadePoint.fadePoint5 - FadePoint.fadePoint4)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool4 = true;
			}
			if(FadePoint.fadePoint5 >= FadePoint.fadePoint1){ //Second fadeGap Calc (always Positive)
				FadePoint.fadeGap5 = (float) ((FadePoint.fadePoint5 - FadePoint.fadePoint1)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool5 = false;
			}else{
				FadePoint.fadeGap5 = (float) ((FadePoint.fadePoint1 - FadePoint.fadePoint5)/(0.01 * FadePoint.fadeTimer));
				FadePoint.fadeGapBool5 = true;
			}
			FadePoint.fadePoint = 5;
			FadePoint.fadeAccess2 = 0;
			DMXReturns.dmxIntFinder(FadePoint.fadeChan,FadePoint.fadePoint1);
			
		
		}else{//Closing Statement
			System.out.println("Command not recognized. Try again.");
		}
		
				
		}while(dmxBool);
	}
}
